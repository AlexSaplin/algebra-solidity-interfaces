{
  "id": "452409fa11dcf5ef5e23896ae0617e37",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/core/IAlgebraVirtualPool.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\ninterface IAlgebraVirtualPool {\r\n  enum Status {\r\n    NOT_EXIST,\r\n    ACTIVE,\r\n    NOT_STARTED\r\n  }\r\n\r\n  /**\r\n   * @dev This function is called by the main pool when an initialized tick is crossed there.\r\n   * If the tick is also initialized in a virtual pool it should be crossed too\r\n   * @param nextTick The crossed tick\r\n   * @param zeroToOne The direction\r\n   */\r\n  function cross(int24 nextTick, bool zeroToOne) external;\r\n\r\n  /**\r\n   * @dev This function is called from the main pool before every swap To increase seconds per liquidity\r\n   * cumulative considering previous timestamp and liquidity. The liquidity is stored in a virtual pool\r\n   * @param currentTimestamp The timestamp of the current swap\r\n   * @return Status The status of virtual pool\r\n   */\r\n  function increaseCumulative(uint32 currentTimestamp) external returns (Status);\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 0
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/core/IAlgebraVirtualPool.sol": {
        "IAlgebraVirtualPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "nextTick",
                  "type": "int24"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                }
              ],
              "name": "cross",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                }
              ],
              "name": "increaseCumulative",
              "outputs": [
                {
                  "internalType": "enum IAlgebraVirtualPool.Status",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "cross(int24,bool)": "01342b19",
              "increaseCumulative(uint32)": "7f376059"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/core/IAlgebraVirtualPool.sol": {
        "ast": {
          "absolutePath": "contracts/core/IAlgebraVirtualPool.sol",
          "exportedSymbols": {
            "IAlgebraVirtualPool": [
              22
            ]
          },
          "id": 23,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 22,
              "linearizedBaseContracts": [
                22
              ],
              "name": "IAlgebraVirtualPool",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IAlgebraVirtualPool.Status",
                  "id": 5,
                  "members": [
                    {
                      "id": 2,
                      "name": "NOT_EXIST",
                      "nodeType": "EnumValue",
                      "src": "128:9:0"
                    },
                    {
                      "id": 3,
                      "name": "ACTIVE",
                      "nodeType": "EnumValue",
                      "src": "144:6:0"
                    },
                    {
                      "id": 4,
                      "name": "NOT_STARTED",
                      "nodeType": "EnumValue",
                      "src": "157:11:0"
                    }
                  ],
                  "name": "Status",
                  "nodeType": "EnumDefinition",
                  "src": "109:64:0"
                },
                {
                  "documentation": {
                    "id": 6,
                    "nodeType": "StructuredDocumentation",
                    "src": "179:262:0",
                    "text": " @dev This function is called by the main pool when an initialized tick is crossed there.\n If the tick is also initialized in a virtual pool it should be crossed too\n @param nextTick The crossed tick\n @param zeroToOne The direction"
                  },
                  "functionSelector": "01342b19",
                  "id": 13,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cross",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "nextTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "460:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 10,
                        "mutability": "mutable",
                        "name": "zeroToOne",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "476:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "476:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "459:32:0"
                  },
                  "returnParameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "500:0:0"
                  },
                  "scope": 22,
                  "src": "445:56:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "507:333:0",
                    "text": " @dev This function is called from the main pool before every swap To increase seconds per liquidity\n cumulative considering previous timestamp and liquidity. The liquidity is stored in a virtual pool\n @param currentTimestamp The timestamp of the current swap\n @return Status The status of virtual pool"
                  },
                  "functionSelector": "7f376059",
                  "id": 21,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseCumulative",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "currentTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "872:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "872:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "871:25:0"
                  },
                  "returnParameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "915:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$5",
                          "typeString": "enum IAlgebraVirtualPool.Status"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 5,
                          "src": "915:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$5",
                            "typeString": "enum IAlgebraVirtualPool.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "914:8:0"
                  },
                  "scope": 22,
                  "src": "844:79:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 23,
              "src": "74:852:0"
            }
          ],
          "src": "46:882:0"
        },
        "id": 0
      }
    }
  }
}
