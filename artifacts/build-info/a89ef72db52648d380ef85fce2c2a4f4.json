{
  "id": "a89ef72db52648d380ef85fce2c2a4f4",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/core/IAlgebraPool.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport './pool/IAlgebraPoolImmutables.sol';\r\nimport './pool/IAlgebraPoolState.sol';\r\nimport './pool/IAlgebraPoolDerivedState.sol';\r\nimport './pool/IAlgebraPoolActions.sol';\r\nimport './pool/IAlgebraPoolPermissionedActions.sol';\r\nimport './pool/IAlgebraPoolEvents.sol';\r\n\r\n/**\r\n * @title The interface for a Algebra Pool\r\n * @dev The pool interface is broken up into many smaller pieces.\r\n * Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n * https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\n */\r\ninterface IAlgebraPool is\r\n  IAlgebraPoolImmutables,\r\n  IAlgebraPoolState,\r\n  IAlgebraPoolDerivedState,\r\n  IAlgebraPoolActions,\r\n  IAlgebraPoolPermissionedActions,\r\n  IAlgebraPoolEvents\r\n{\r\n  // used only for combining interfaces\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolImmutables.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport '../IDataStorageOperator.sol';\r\n\r\n/// @title Pool state that never changes\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IAlgebraPoolImmutables {\r\n  /**\r\n   * @notice The contract that stores all the timepoints and can perform actions with them\r\n   * @return The operator address\r\n   */\r\n  function dataStorageOperator() external view returns (address);\r\n\r\n  /**\r\n   * @notice The contract that deployed the pool, which must adhere to the IAlgebraFactory interface\r\n   * @return The contract address\r\n   */\r\n  function factory() external view returns (address);\r\n\r\n  /**\r\n   * @notice The first of the two tokens of the pool, sorted by address\r\n   * @return The token contract address\r\n   */\r\n  function token0() external view returns (address);\r\n\r\n  /**\r\n   * @notice The second of the two tokens of the pool, sorted by address\r\n   * @return The token contract address\r\n   */\r\n  function token1() external view returns (address);\r\n\r\n  /**\r\n   * @notice The pool tick spacing\r\n   * @dev Ticks can only be used at multiples of this value\r\n   * e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ...\r\n   * This value is an int24 to avoid casting even though it is always positive.\r\n   * @return The tick spacing\r\n   */\r\n  function tickSpacing() external view returns (int24);\r\n\r\n  /**\r\n   * @notice The maximum amount of position liquidity that can use any tick in the range\r\n   * @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\r\n   * also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\r\n   * @return The max amount of liquidity per tick\r\n   */\r\n  function maxLiquidityPerTick() external view returns (uint128);\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolState.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Pool state that can change\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IAlgebraPoolState {\r\n  /**\r\n   * @notice The globalState structure in the pool stores many values but requires only one slot\r\n   * and is exposed as a single method to save gas when accessed externally.\r\n   * @return price The current price of the pool as a sqrt(token1/token0) Q64.96 value;\r\n   * Returns tick The current tick of the pool, i.e. according to the last tick transition that was run;\r\n   * Returns This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick\r\n   * boundary;\r\n   * Returns fee The last pool fee value in hundredths of a bip, i.e. 1e-6;\r\n   * Returns timepointIndex The index of the last written timepoint;\r\n   * Returns communityFeeToken0 The community fee percentage of the swap fee in thousandths (1e-3) for token0;\r\n   * Returns communityFeeToken1 The community fee percentage of the swap fee in thousandths (1e-3) for token1;\r\n   * Returns unlocked Whether the pool is currently locked to reentrancy;\r\n   */\r\n  function globalState()\r\n    external\r\n    view\r\n    returns (\r\n      uint160 price,\r\n      int24 tick,\r\n      uint16 fee,\r\n      uint16 timepointIndex,\r\n      uint8 communityFeeToken0,\r\n      uint8 communityFeeToken1,\r\n      bool unlocked\r\n    );\r\n\r\n  /**\r\n   * @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\r\n   * @dev This value can overflow the uint256\r\n   */\r\n  function totalFeeGrowth0Token() external view returns (uint256);\r\n\r\n  /**\r\n   * @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\r\n   * @dev This value can overflow the uint256\r\n   */\r\n  function totalFeeGrowth1Token() external view returns (uint256);\r\n\r\n  /**\r\n   * @notice The currently in range liquidity available to the pool\r\n   * @dev This value has no relationship to the total liquidity across all ticks.\r\n   * Returned value cannot exceed type(uint128).max\r\n   */\r\n  function liquidity() external view returns (uint128);\r\n\r\n  /**\r\n   * @notice Look up information about a specific tick in the pool\r\n   * @dev This is a public structure, so the `return` natspec tags are omitted.\r\n   * @param tick The tick to look up\r\n   * @return liquidityTotal the total amount of position liquidity that uses the pool either as tick lower or\r\n   * tick upper\r\n   * @return liquidityDelta how much liquidity changes when the pool price crosses the tick;\r\n   * Returns outerFeeGrowth0Token the fee growth on the other side of the tick from the current tick in token0;\r\n   * Returns outerFeeGrowth1Token the fee growth on the other side of the tick from the current tick in token1;\r\n   * Returns outerTickCumulative the cumulative tick value on the other side of the tick from the current tick;\r\n   * Returns outerSecondsPerLiquidity the seconds spent per liquidity on the other side of the tick from the current tick;\r\n   * Returns outerSecondsSpent the seconds spent on the other side of the tick from the current tick;\r\n   * Returns initialized Set to true if the tick is initialized, i.e. liquidityTotal is greater than 0\r\n   * otherwise equal to false. Outside values can only be used if the tick is initialized.\r\n   * In addition, these values are only relative and must be used only in comparison to previous snapshots for\r\n   * a specific position.\r\n   */\r\n  function ticks(int24 tick)\r\n    external\r\n    view\r\n    returns (\r\n      uint128 liquidityTotal,\r\n      int128 liquidityDelta,\r\n      uint256 outerFeeGrowth0Token,\r\n      uint256 outerFeeGrowth1Token,\r\n      int56 outerTickCumulative,\r\n      uint160 outerSecondsPerLiquidity,\r\n      uint32 outerSecondsSpent,\r\n      bool initialized\r\n    );\r\n\r\n  /** @notice Returns 256 packed tick initialized boolean values. See TickTable for more information */\r\n  function tickTable(int16 wordPosition) external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Returns the information about a position by the position's key\r\n   * @dev This is a public mapping of structures, so the `return` natspec tags are omitted.\r\n   * @param key The position's key is a hash of a preimage composed by the owner, bottomTick and topTick\r\n   * @return liquidityAmount The amount of liquidity in the position;\r\n   * Returns lastLiquidityAddTimestamp Timestamp of last adding of liquidity;\r\n   * Returns innerFeeGrowth0Token Fee growth of token0 inside the tick range as of the last mint/burn/poke;\r\n   * Returns innerFeeGrowth1Token Fee growth of token1 inside the tick range as of the last mint/burn/poke;\r\n   * Returns fees0 The computed amount of token0 owed to the position as of the last mint/burn/poke;\r\n   * Returns fees1 The computed amount of token1 owed to the position as of the last mint/burn/poke\r\n   */\r\n  function positions(bytes32 key)\r\n    external\r\n    view\r\n    returns (\r\n      uint128 liquidityAmount,\r\n      uint32 lastLiquidityAddTimestamp,\r\n      uint256 innerFeeGrowth0Token,\r\n      uint256 innerFeeGrowth1Token,\r\n      uint128 fees0,\r\n      uint128 fees1\r\n    );\r\n\r\n  /**\r\n   * @notice Returns data about a specific timepoint index\r\n   * @param index The element of the timepoints array to fetch\r\n   * @dev You most likely want to use #getTimepoints() instead of this method to get an timepoint as of some amount of time\r\n   * ago, rather than at a specific index in the array.\r\n   * This is a public mapping of structures, so the `return` natspec tags are omitted.\r\n   * @return initialized whether the timepoint has been initialized and the values are safe to use;\r\n   * Returns blockTimestamp The timestamp of the timepoint;\r\n   * Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp;\r\n   * Returns secondsPerLiquidityCumulative the seconds per in range liquidity for the life of the pool as of the timepoint timestamp;\r\n   * Returns volatilityCumulative Cumulative standard deviation for the life of the pool as of the timepoint timestamp;\r\n   * Returns averageTick Time-weighted average tick;\r\n   * Returns volumePerLiquidityCumulative Cumulative swap volume per liquidity for the life of the pool as of the timepoint timestamp;\r\n   */\r\n  function timepoints(uint256 index)\r\n    external\r\n    view\r\n    returns (\r\n      bool initialized,\r\n      uint32 blockTimestamp,\r\n      int56 tickCumulative,\r\n      uint160 secondsPerLiquidityCumulative,\r\n      uint88 volatilityCumulative,\r\n      int24 averageTick,\r\n      uint144 volumePerLiquidityCumulative\r\n    );\r\n\r\n  /**\r\n   * @notice Returns the information about active incentive\r\n   * @dev if there is no active incentive at the moment, virtualPool,endTimestamp,startTimestamp would be equal to 0\r\n   * @return virtualPool The address of a virtual pool associated with the current active incentive\r\n   */\r\n  function activeIncentive() external view returns (address virtualPool);\r\n\r\n  /**\r\n   * @notice Returns the lock time for added liquidity\r\n   */\r\n  function liquidityCooldown() external view returns (uint32 cooldownInSeconds);\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolDerivedState.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/**\r\n * @title Pool state that is not stored\r\n * @notice Contains view functions to provide information about the pool that is computed rather than stored on the\r\n * blockchain. The functions here may have variable gas costs.\r\n * @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n * https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\n */\r\ninterface IAlgebraPoolDerivedState {\r\n  /**\r\n   * @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\r\n   * @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\r\n   * the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\r\n   * you must call it with secondsAgos = [3600, 0].\r\n   * @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\r\n   * log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\r\n   * @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\r\n   * @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\r\n   * @return secondsPerLiquidityCumulatives Cumulative seconds per liquidity-in-range value as of each `secondsAgos`\r\n   * from the current block timestamp\r\n   * @return volatilityCumulatives Cumulative standard deviation as of each `secondsAgos`\r\n   * @return volumePerAvgLiquiditys Cumulative swap volume per liquidity as of each `secondsAgos`\r\n   */\r\n  function getTimepoints(uint32[] calldata secondsAgos)\r\n    external\r\n    view\r\n    returns (\r\n      int56[] memory tickCumulatives,\r\n      uint160[] memory secondsPerLiquidityCumulatives,\r\n      uint112[] memory volatilityCumulatives,\r\n      uint256[] memory volumePerAvgLiquiditys\r\n    );\r\n\r\n  /**\r\n   * @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\r\n   * @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\r\n   * I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\r\n   * snapshot is taken and the second snapshot is taken.\r\n   * @param bottomTick The lower tick of the range\r\n   * @param topTick The upper tick of the range\r\n   * @return innerTickCumulative The snapshot of the tick accumulator for the range\r\n   * @return innerSecondsSpentPerLiquidity The snapshot of seconds per liquidity for the range\r\n   * @return innerSecondsSpent The snapshot of the number of seconds during which the price was in this range\r\n   */\r\n  function getInnerCumulatives(int24 bottomTick, int24 topTick)\r\n    external\r\n    view\r\n    returns (\r\n      int56 innerTickCumulative,\r\n      uint160 innerSecondsSpentPerLiquidity,\r\n      uint32 innerSecondsSpent\r\n    );\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolActions.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Permissionless pool actions\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IAlgebraPoolActions {\r\n  /**\r\n   * @notice Sets the initial price for the pool\r\n   * @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\r\n   * @param price the initial sqrt price of the pool as a Q64.96\r\n   */\r\n  function initialize(uint160 price) external;\r\n\r\n  /**\r\n   * @notice Adds liquidity for the given recipient/bottomTick/topTick position\r\n   * @dev The caller of this method receives a callback in the form of IAlgebraMintCallback# AlgebraMintCallback\r\n   * in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\r\n   * on bottomTick, topTick, the amount of liquidity, and the current price.\r\n   * @param sender The address which will receive potential surplus of paid tokens\r\n   * @param recipient The address for which the liquidity will be created\r\n   * @param bottomTick The lower tick of the position in which to add liquidity\r\n   * @param topTick The upper tick of the position in which to add liquidity\r\n   * @param amount The desired amount of liquidity to mint\r\n   * @param data Any data that should be passed through to the callback\r\n   * @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n   * @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n   * @return liquidityActual The actual minted amount of liquidity\r\n   */\r\n  function mint(\r\n    address sender,\r\n    address recipient,\r\n    int24 bottomTick,\r\n    int24 topTick,\r\n    uint128 amount,\r\n    bytes calldata data\r\n  )\r\n    external\r\n    returns (\r\n      uint256 amount0,\r\n      uint256 amount1,\r\n      uint128 liquidityActual\r\n    );\r\n\r\n  /**\r\n   * @notice Collects tokens owed to a position\r\n   * @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\r\n   * Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\r\n   * amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\r\n   * actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\r\n   * @param recipient The address which should receive the fees collected\r\n   * @param bottomTick The lower tick of the position for which to collect fees\r\n   * @param topTick The upper tick of the position for which to collect fees\r\n   * @param amount0Requested How much token0 should be withdrawn from the fees owed\r\n   * @param amount1Requested How much token1 should be withdrawn from the fees owed\r\n   * @return amount0 The amount of fees collected in token0\r\n   * @return amount1 The amount of fees collected in token1\r\n   */\r\n  function collect(\r\n    address recipient,\r\n    int24 bottomTick,\r\n    int24 topTick,\r\n    uint128 amount0Requested,\r\n    uint128 amount1Requested\r\n  ) external returns (uint128 amount0, uint128 amount1);\r\n\r\n  /**\r\n   * @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\r\n   * @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\r\n   * @dev Fees must be collected separately via a call to #collect\r\n   * @param bottomTick The lower tick of the position for which to burn liquidity\r\n   * @param topTick The upper tick of the position for which to burn liquidity\r\n   * @param amount How much liquidity to burn\r\n   * @return amount0 The amount of token0 sent to the recipient\r\n   * @return amount1 The amount of token1 sent to the recipient\r\n   */\r\n  function burn(\r\n    int24 bottomTick,\r\n    int24 topTick,\r\n    uint128 amount\r\n  ) external returns (uint256 amount0, uint256 amount1);\r\n\r\n  /**\r\n   * @notice Swap token0 for token1, or token1 for token0\r\n   * @dev The caller of this method receives a callback in the form of IAlgebraSwapCallback# AlgebraSwapCallback\r\n   * @param recipient The address to receive the output of the swap\r\n   * @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\r\n   * @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n   * @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\r\n   * value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @param data Any data to be passed through to the callback. If using the Router it should contain\r\n   * SwapRouter#SwapCallbackData\r\n   * @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\r\n   * @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\r\n   */\r\n  function swap(\r\n    address recipient,\r\n    bool zeroToOne,\r\n    int256 amountSpecified,\r\n    uint160 limitSqrtPrice,\r\n    bytes calldata data\r\n  ) external returns (int256 amount0, int256 amount1);\r\n\r\n  /**\r\n   * @notice Swap token0 for token1, or token1 for token0 (tokens that have fee on transfer)\r\n   * @dev The caller of this method receives a callback in the form of I AlgebraSwapCallback# AlgebraSwapCallback\r\n   * @param sender The address called this function (Comes from the Router)\r\n   * @param recipient The address to receive the output of the swap\r\n   * @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\r\n   * @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n   * @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\r\n   * value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @param data Any data to be passed through to the callback. If using the Router it should contain\r\n   * SwapRouter#SwapCallbackData\r\n   * @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\r\n   * @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\r\n   */\r\n  function swapSupportingFeeOnInputTokens(\r\n    address sender,\r\n    address recipient,\r\n    bool zeroToOne,\r\n    int256 amountSpecified,\r\n    uint160 limitSqrtPrice,\r\n    bytes calldata data\r\n  ) external returns (int256 amount0, int256 amount1);\r\n\r\n  /**\r\n   * @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\r\n   * @dev The caller of this method receives a callback in the form of IAlgebraFlashCallback# AlgebraFlashCallback\r\n   * @dev All excess tokens paid in the callback are distributed to liquidity providers as an additional fee. So this method can be used\r\n   * to donate underlying tokens to currently in-range liquidity providers by calling with 0 amount{0,1} and sending\r\n   * the donation amount(s) from the callback\r\n   * @param recipient The address which will receive the token0 and token1 amounts\r\n   * @param amount0 The amount of token0 to send\r\n   * @param amount1 The amount of token1 to send\r\n   * @param data Any data to be passed through to the callback\r\n   */\r\n  function flash(\r\n    address recipient,\r\n    uint256 amount0,\r\n    uint256 amount1,\r\n    bytes calldata data\r\n  ) external;\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolPermissionedActions.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/**\r\n * @title Permissioned pool actions\r\n * @notice Contains pool methods that may only be called by the factory owner or tokenomics\r\n * @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n * https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\n */\r\ninterface IAlgebraPoolPermissionedActions {\r\n  /**\r\n   * @notice Set the community's % share of the fees. Cannot exceed 25% (250)\r\n   * @param communityFee0 new community fee percent for token0 of the pool in thousandths (1e-3)\r\n   * @param communityFee1 new community fee percent for token1 of the pool in thousandths (1e-3)\r\n   */\r\n  function setCommunityFee(uint8 communityFee0, uint8 communityFee1) external;\r\n\r\n  /**\r\n   * @notice Sets an active incentive\r\n   * @param virtualPoolAddress The address of a virtual pool associated with the incentive\r\n   */\r\n  function setIncentive(address virtualPoolAddress) external;\r\n\r\n  /**\r\n   * @notice Sets new lock time for added liquidity\r\n   * @param newLiquidityCooldown The time in seconds\r\n   */\r\n  function setLiquidityCooldown(uint32 newLiquidityCooldown) external;\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolEvents.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Events emitted by a pool\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IAlgebraPoolEvents {\r\n  /**\r\n   * @notice Emitted exactly once by a pool when #initialize is first called on the pool\r\n   * @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\r\n   * @param price The initial sqrt price of the pool, as a Q64.96\r\n   * @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\r\n   */\r\n  event Initialize(uint160 price, int24 tick);\r\n\r\n  /**\r\n   * @notice Emitted when liquidity is minted for a given position\r\n   * @param sender The address that minted the liquidity\r\n   * @param owner The owner of the position and recipient of any minted liquidity\r\n   * @param bottomTick The lower tick of the position\r\n   * @param topTick The upper tick of the position\r\n   * @param liquidityAmount The amount of liquidity minted to the position range\r\n   * @param amount0 How much token0 was required for the minted liquidity\r\n   * @param amount1 How much token1 was required for the minted liquidity\r\n   */\r\n  event Mint(\r\n    address sender,\r\n    address indexed owner,\r\n    int24 indexed bottomTick,\r\n    int24 indexed topTick,\r\n    uint128 liquidityAmount,\r\n    uint256 amount0,\r\n    uint256 amount1\r\n  );\r\n\r\n  /**\r\n   * @notice Emitted when fees are collected by the owner of a position\r\n   * @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\r\n   * @param owner The owner of the position for which fees are collected\r\n   * @param recipient The address that received fees\r\n   * @param bottomTick The lower tick of the position\r\n   * @param topTick The upper tick of the position\r\n   * @param amount0 The amount of token0 fees collected\r\n   * @param amount1 The amount of token1 fees collected\r\n   */\r\n  event Collect(address indexed owner, address recipient, int24 indexed bottomTick, int24 indexed topTick, uint128 amount0, uint128 amount1);\r\n\r\n  /**\r\n   * @notice Emitted when a position's liquidity is removed\r\n   * @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\r\n   * @param owner The owner of the position for which liquidity is removed\r\n   * @param bottomTick The lower tick of the position\r\n   * @param topTick The upper tick of the position\r\n   * @param liquidityAmount The amount of liquidity to remove\r\n   * @param amount0 The amount of token0 withdrawn\r\n   * @param amount1 The amount of token1 withdrawn\r\n   */\r\n  event Burn(address indexed owner, int24 indexed bottomTick, int24 indexed topTick, uint128 liquidityAmount, uint256 amount0, uint256 amount1);\r\n\r\n  /**\r\n   * @notice Emitted by the pool for any swaps between token0 and token1\r\n   * @param sender The address that initiated the swap call, and that received the callback\r\n   * @param recipient The address that received the output of the swap\r\n   * @param amount0 The delta of the token0 balance of the pool\r\n   * @param amount1 The delta of the token1 balance of the pool\r\n   * @param price The sqrt(price) of the pool after the swap, as a Q64.96\r\n   * @param liquidity The liquidity of the pool after the swap\r\n   * @param tick The log base 1.0001 of price of the pool after the swap\r\n   */\r\n  event Swap(address indexed sender, address indexed recipient, int256 amount0, int256 amount1, uint160 price, uint128 liquidity, int24 tick);\r\n\r\n  /**\r\n   * @notice Emitted by the pool for any flashes of token0/token1\r\n   * @param sender The address that initiated the swap call, and that received the callback\r\n   * @param recipient The address that received the tokens from flash\r\n   * @param amount0 The amount of token0 that was flashed\r\n   * @param amount1 The amount of token1 that was flashed\r\n   * @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\r\n   * @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\r\n   */\r\n  event Flash(address indexed sender, address indexed recipient, uint256 amount0, uint256 amount1, uint256 paid0, uint256 paid1);\r\n\r\n  /**\r\n   * @notice Emitted when the community fee is changed by the pool\r\n   * @param communityFee0New The updated value of the token0 community fee percent\r\n   * @param communityFee1New The updated value of the token1 community fee percent\r\n   */\r\n  event CommunityFee(uint8 communityFee0New, uint8 communityFee1New);\r\n\r\n  /**\r\n   * @notice Emitted when new activeIncentive is set\r\n   * @param virtualPoolAddress The address of a virtual pool associated with the current active incentive\r\n   */\r\n  event Incentive(address indexed virtualPoolAddress);\r\n\r\n  /**\r\n   * @notice Emitted when the fee changes\r\n   * @param fee The value of the token fee\r\n   */\r\n  event Fee(uint16 fee);\r\n\r\n  /**\r\n   * @notice Emitted when the LiquidityCooldown changes\r\n   * @param liquidityCooldown The value of locktime for added liquidity\r\n   */\r\n  event LiquidityCooldown(uint32 liquidityCooldown);\r\n}\r\n"
      },
      "contracts/core/IDataStorageOperator.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\npragma abicoder v2;\r\n\r\ninterface IDataStorageOperator {\r\n  // alpha1 + alpha2 + baseFee must be <= type(uint16).max\r\n  struct FeeConfig {\r\n    uint16 alpha1; // max value of the first sigmoid\r\n    uint16 alpha2; // max value of the second sigmoid\r\n    uint32 beta1; // shift along the x-axis for the first sigmoid\r\n    uint32 beta2; // shift along the x-axis for the second sigmoid\r\n    uint16 gamma1; // horizontal stretch factor for the first sigmoid\r\n    uint16 gamma2; // horizontal stretch factor for the second sigmoid\r\n    uint32 volumeBeta; // shift along the x-axis for the outer volume-sigmoid\r\n    uint16 volumeGamma; // horizontal stretch factor the outer volume-sigmoid\r\n    uint16 baseFee; // minimum possible fee\r\n  }\r\n\r\n  event FeeConfiguration(FeeConfig feeConfig);\r\n\r\n  /**\r\n   * @notice Returns data belonging to a certain timepoint\r\n   * @param index The index of timepoint in the array\r\n   * @dev There is more convenient function to fetch a timepoint: observe(). Which requires not an index but seconds\r\n   * @return initialized Whether the timepoint has been initialized and the values are safe to use,\r\n   * blockTimestamp The timestamp of the observation,\r\n   * tickCumulative The tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp,\r\n   * secondsPerLiquidityCumulative The seconds per in range liquidity for the life of the pool as of the timepoint timestamp,\r\n   * volatilityCumulative Cumulative standard deviation for the life of the pool as of the timepoint timestamp,\r\n   * averageTick Time-weighted average tick,\r\n   * volumePerLiquidityCumulative Cumulative swap volume per liquidity for the life of the pool as of the timepoint timestamp\r\n   */\r\n  function timepoints(uint256 index)\r\n    external\r\n    view\r\n    returns (\r\n      bool initialized,\r\n      uint32 blockTimestamp,\r\n      int56 tickCumulative,\r\n      uint160 secondsPerLiquidityCumulative,\r\n      uint88 volatilityCumulative,\r\n      int24 averageTick,\r\n      uint144 volumePerLiquidityCumulative\r\n    );\r\n\r\n  /// @notice Initialize the dataStorage array by writing the first slot. Called once for the lifecycle of the timepoints array\r\n  /// @param time The time of the dataStorage initialization, via block.timestamp truncated to uint32\r\n  /// @param tick Initial tick\r\n  function initialize(uint32 time, int24 tick) external;\r\n\r\n  /// @dev Reverts if an timepoint at or before the desired timepoint timestamp does not exist.\r\n  /// 0 may be passed as `secondsAgo' to return the current cumulative values.\r\n  /// If called with a timestamp falling between two timepoints, returns the counterfactual accumulator values\r\n  /// at exactly the timestamp between the two timepoints.\r\n  /// @param time The current block timestamp\r\n  /// @param secondsAgo The amount of time to look back, in seconds, at which point to return an timepoint\r\n  /// @param tick The current tick\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @return tickCumulative The cumulative tick since the pool was first initialized, as of `secondsAgo`\r\n  /// @return secondsPerLiquidityCumulative The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`\r\n  /// @return volatilityCumulative The cumulative volatility value since the pool was first initialized, as of `secondsAgo`\r\n  /// @return volumePerAvgLiquidity The cumulative volume per liquidity value since the pool was first initialized, as of `secondsAgo`\r\n  function getSingleTimepoint(\r\n    uint32 time,\r\n    uint32 secondsAgo,\r\n    int24 tick,\r\n    uint16 index,\r\n    uint128 liquidity\r\n  )\r\n    external\r\n    view\r\n    returns (\r\n      int56 tickCumulative,\r\n      uint160 secondsPerLiquidityCumulative,\r\n      uint112 volatilityCumulative,\r\n      uint256 volumePerAvgLiquidity\r\n    );\r\n\r\n  /// @notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\r\n  /// @dev Reverts if `secondsAgos` > oldest timepoint\r\n  /// @param time The current block.timestamp\r\n  /// @param secondsAgos Each amount of time to look back, in seconds, at which point to return an timepoint\r\n  /// @param tick The current tick\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @return tickCumulatives The cumulative tick since the pool was first initialized, as of each `secondsAgo`\r\n  /// @return secondsPerLiquidityCumulatives The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`\r\n  /// @return volatilityCumulatives The cumulative volatility values since the pool was first initialized, as of each `secondsAgo`\r\n  /// @return volumePerAvgLiquiditys The cumulative volume per liquidity values since the pool was first initialized, as of each `secondsAgo`\r\n  function getTimepoints(\r\n    uint32 time,\r\n    uint32[] memory secondsAgos,\r\n    int24 tick,\r\n    uint16 index,\r\n    uint128 liquidity\r\n  )\r\n    external\r\n    view\r\n    returns (\r\n      int56[] memory tickCumulatives,\r\n      uint160[] memory secondsPerLiquidityCumulatives,\r\n      uint112[] memory volatilityCumulatives,\r\n      uint256[] memory volumePerAvgLiquiditys\r\n    );\r\n\r\n  /// @notice Returns average volatility in the range from time-WINDOW to time\r\n  /// @param time The current block.timestamp\r\n  /// @param tick The current tick\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @return TWVolatilityAverage The average volatility in the recent range\r\n  /// @return TWVolumePerLiqAverage The average volume per liquidity in the recent range\r\n  function getAverages(\r\n    uint32 time,\r\n    int24 tick,\r\n    uint16 index,\r\n    uint128 liquidity\r\n  ) external view returns (uint112 TWVolatilityAverage, uint256 TWVolumePerLiqAverage);\r\n\r\n  /// @notice Writes an dataStorage timepoint to the array\r\n  /// @dev Writable at most once per block. Index represents the most recently written element. index must be tracked externally.\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param blockTimestamp The timestamp of the new timepoint\r\n  /// @param tick The active tick at the time of the new timepoint\r\n  /// @param liquidity The total in-range liquidity at the time of the new timepoint\r\n  /// @param volumePerLiquidity The gmean(volumes)/liquidity at the time of the new timepoint\r\n  /// @return indexUpdated The new index of the most recently written element in the dataStorage array\r\n  function write(\r\n    uint16 index,\r\n    uint32 blockTimestamp,\r\n    int24 tick,\r\n    uint128 liquidity,\r\n    uint128 volumePerLiquidity\r\n  ) external returns (uint16 indexUpdated);\r\n\r\n  /// @notice Changes fee configuration for the pool\r\n  function changeFeeConfiguration(FeeConfig calldata feeConfig) external;\r\n\r\n  /// @notice Calculates gmean(volume/liquidity) for block\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @param amount0 Total amount of swapped token0\r\n  /// @param amount1 Total amount of swapped token1\r\n  /// @return volumePerLiquidity gmean(volume/liquidity) capped by 100000 << 64\r\n  function calculateVolumePerLiquidity(\r\n    uint128 liquidity,\r\n    int256 amount0,\r\n    int256 amount1\r\n  ) external pure returns (uint128 volumePerLiquidity);\r\n\r\n  /// @return windowLength Length of window used to calculate averages\r\n  function window() external view returns (uint32 windowLength);\r\n\r\n  /// @notice Calculates fee based on combination of sigmoids\r\n  /// @param time The current block.timestamp\r\n  /// @param tick The current tick\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @return fee The fee in hundredths of a bip, i.e. 1e-6\r\n  function getFee(\r\n    uint32 time,\r\n    int24 tick,\r\n    uint16 index,\r\n    uint128 liquidity\r\n  ) external view returns (uint16 fee);\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 0
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/core/IAlgebraPool.sol": {
        "IAlgebraPool": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "name": "Collect",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "communityFee0New",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "communityFee1New",
                  "type": "uint8"
                }
              ],
              "name": "CommunityFee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                }
              ],
              "name": "Fee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid1",
                  "type": "uint256"
                }
              ],
              "name": "Flash",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                }
              ],
              "name": "Incentive",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Initialize",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "liquidityCooldown",
                  "type": "uint32"
                }
              ],
              "name": "LiquidityCooldown",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "activeIncentive",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Requested",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Requested",
                  "type": "uint128"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dataStorageOperator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "flash",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                }
              ],
              "name": "getInnerCumulatives",
              "outputs": [
                {
                  "internalType": "int56",
                  "name": "innerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "innerSecondsSpentPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "innerSecondsSpent",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32[]",
                  "name": "secondsAgos",
                  "type": "uint32[]"
                }
              ],
              "name": "getTimepoints",
              "outputs": [
                {
                  "internalType": "int56[]",
                  "name": "tickCumulatives",
                  "type": "int56[]"
                },
                {
                  "internalType": "uint160[]",
                  "name": "secondsPerLiquidityCumulatives",
                  "type": "uint160[]"
                },
                {
                  "internalType": "uint112[]",
                  "name": "volatilityCumulatives",
                  "type": "uint112[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "volumePerAvgLiquiditys",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalState",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidityCooldown",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "cooldownInSeconds",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxLiquidityPerTick",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidityActual",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastLiquidityAddTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint256",
                  "name": "innerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "innerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "fees0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "fees1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "communityFee0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFee1",
                  "type": "uint8"
                }
              ],
              "name": "setCommunityFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                }
              ],
              "name": "setIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "newLiquidityCooldown",
                  "type": "uint32"
                }
              ],
              "name": "setLiquidityCooldown",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "limitSqrtPrice",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "limitSqrtPrice",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swapSupportingFeeOnInputTokens",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tickSpacing",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int16",
                  "name": "wordPosition",
                  "type": "int16"
                }
              ],
              "name": "tickTable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityTotal",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "outerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "outerSecondsPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "outerSecondsSpent",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "timepoints",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeeGrowth0Token",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeeGrowth1Token",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "activeIncentive()": "facb0eb1",
              "burn(int24,int24,uint128)": "a34123a7",
              "collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
              "dataStorageOperator()": "29047dfa",
              "factory()": "c45a0155",
              "flash(address,uint256,uint256,bytes)": "490e6cbc",
              "getInnerCumulatives(int24,int24)": "920c34e5",
              "getTimepoints(uint32[])": "9d3a5241",
              "globalState()": "e76c01e4",
              "initialize(uint160)": "f637731d",
              "liquidity()": "1a686502",
              "liquidityCooldown()": "17e25b3c",
              "maxLiquidityPerTick()": "70cf754a",
              "mint(address,address,int24,int24,uint128,bytes)": "aafe29c0",
              "positions(bytes32)": "514ea4bf",
              "setCommunityFee(uint8,uint8)": "7c0112b7",
              "setIncentive(address)": "7c1fe0c8",
              "setLiquidityCooldown(uint32)": "289fe9b0",
              "swap(address,bool,int256,uint160,bytes)": "128acb08",
              "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)": "71334694",
              "tickSpacing()": "d0c93a7c",
              "tickTable(int16)": "c677e3e0",
              "ticks(int24)": "f30dba93",
              "timepoints(uint256)": "74eceae6",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalFeeGrowth0Token()": "6378ae44",
              "totalFeeGrowth1Token()": "ecdecf42"
            }
          }
        }
      },
      "contracts/core/IDataStorageOperator.sol": {
        "IDataStorageOperator": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "alpha1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "alpha2",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "beta1",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "beta2",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint16",
                      "name": "gamma1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "gamma2",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "volumeBeta",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint16",
                      "name": "volumeGamma",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "baseFee",
                      "type": "uint16"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IDataStorageOperator.FeeConfig",
                  "name": "feeConfig",
                  "type": "tuple"
                }
              ],
              "name": "FeeConfiguration",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "name": "calculateVolumePerLiquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "volumePerLiquidity",
                  "type": "uint128"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "alpha1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "alpha2",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "beta1",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "beta2",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint16",
                      "name": "gamma1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "gamma2",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "volumeBeta",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint16",
                      "name": "volumeGamma",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "baseFee",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct IDataStorageOperator.FeeConfig",
                  "name": "feeConfig",
                  "type": "tuple"
                }
              ],
              "name": "changeFeeConfiguration",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "getAverages",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "TWVolatilityAverage",
                  "type": "uint112"
                },
                {
                  "internalType": "uint256",
                  "name": "TWVolumePerLiqAverage",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "getFee",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsAgo",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "getSingleTimepoint",
              "outputs": [
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint112",
                  "name": "volatilityCumulative",
                  "type": "uint112"
                },
                {
                  "internalType": "uint256",
                  "name": "volumePerAvgLiquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32[]",
                  "name": "secondsAgos",
                  "type": "uint32[]"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "getTimepoints",
              "outputs": [
                {
                  "internalType": "int56[]",
                  "name": "tickCumulatives",
                  "type": "int56[]"
                },
                {
                  "internalType": "uint160[]",
                  "name": "secondsPerLiquidityCumulatives",
                  "type": "uint160[]"
                },
                {
                  "internalType": "uint112[]",
                  "name": "volatilityCumulatives",
                  "type": "uint112[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "volumePerAvgLiquiditys",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "timepoints",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "window",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "windowLength",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "volumePerLiquidity",
                  "type": "uint128"
                }
              ],
              "name": "write",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "indexUpdated",
                  "type": "uint16"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "calculateVolumePerLiquidity(uint128,int256,int256)": "36e52fee",
              "changeFeeConfiguration((uint16,uint16,uint32,uint32,uint16,uint16,uint32,uint16,uint16))": "1c7004cb",
              "getAverages(uint32,int24,uint16,uint128)": "bc2e0181",
              "getFee(uint32,int24,uint16,uint128)": "c53a182f",
              "getSingleTimepoint(uint32,uint32,int24,uint16,uint128)": "14c54079",
              "getTimepoints(uint32,uint32[],int24,uint16,uint128)": "fd31e988",
              "initialize(uint32,int24)": "475fb80c",
              "timepoints(uint256)": "74eceae6",
              "window()": "461645bf",
              "write(uint16,uint32,int24,uint128,uint128)": "1dd486f2"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolActions.sol": {
        "IAlgebraPoolActions": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Requested",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Requested",
                  "type": "uint128"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "flash",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidityActual",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "limitSqrtPrice",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "limitSqrtPrice",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swapSupportingFeeOnInputTokens",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "burn(int24,int24,uint128)": "a34123a7",
              "collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
              "flash(address,uint256,uint256,bytes)": "490e6cbc",
              "initialize(uint160)": "f637731d",
              "mint(address,address,int24,int24,uint128,bytes)": "aafe29c0",
              "swap(address,bool,int256,uint160,bytes)": "128acb08",
              "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)": "71334694"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolDerivedState.sol": {
        "IAlgebraPoolDerivedState": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                }
              ],
              "name": "getInnerCumulatives",
              "outputs": [
                {
                  "internalType": "int56",
                  "name": "innerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "innerSecondsSpentPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "innerSecondsSpent",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32[]",
                  "name": "secondsAgos",
                  "type": "uint32[]"
                }
              ],
              "name": "getTimepoints",
              "outputs": [
                {
                  "internalType": "int56[]",
                  "name": "tickCumulatives",
                  "type": "int56[]"
                },
                {
                  "internalType": "uint160[]",
                  "name": "secondsPerLiquidityCumulatives",
                  "type": "uint160[]"
                },
                {
                  "internalType": "uint112[]",
                  "name": "volatilityCumulatives",
                  "type": "uint112[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "volumePerAvgLiquiditys",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getInnerCumulatives(int24,int24)": "920c34e5",
              "getTimepoints(uint32[])": "9d3a5241"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolEvents.sol": {
        "IAlgebraPoolEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "name": "Collect",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "communityFee0New",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "communityFee1New",
                  "type": "uint8"
                }
              ],
              "name": "CommunityFee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                }
              ],
              "name": "Fee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid1",
                  "type": "uint256"
                }
              ],
              "name": "Flash",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                }
              ],
              "name": "Incentive",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Initialize",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "liquidityCooldown",
                  "type": "uint32"
                }
              ],
              "name": "LiquidityCooldown",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Swap",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolImmutables.sol": {
        "IAlgebraPoolImmutables": {
          "abi": [
            {
              "inputs": [],
              "name": "dataStorageOperator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxLiquidityPerTick",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tickSpacing",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "dataStorageOperator()": "29047dfa",
              "factory()": "c45a0155",
              "maxLiquidityPerTick()": "70cf754a",
              "tickSpacing()": "d0c93a7c",
              "token0()": "0dfe1681",
              "token1()": "d21220a7"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolPermissionedActions.sol": {
        "IAlgebraPoolPermissionedActions": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "communityFee0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFee1",
                  "type": "uint8"
                }
              ],
              "name": "setCommunityFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                }
              ],
              "name": "setIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "newLiquidityCooldown",
                  "type": "uint32"
                }
              ],
              "name": "setLiquidityCooldown",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "setCommunityFee(uint8,uint8)": "7c0112b7",
              "setIncentive(address)": "7c1fe0c8",
              "setLiquidityCooldown(uint32)": "289fe9b0"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolState.sol": {
        "IAlgebraPoolState": {
          "abi": [
            {
              "inputs": [],
              "name": "activeIncentive",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalState",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidityCooldown",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "cooldownInSeconds",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastLiquidityAddTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint256",
                  "name": "innerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "innerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "fees0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "fees1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int16",
                  "name": "wordPosition",
                  "type": "int16"
                }
              ],
              "name": "tickTable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityTotal",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "outerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "outerSecondsPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "outerSecondsSpent",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "timepoints",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeeGrowth0Token",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeeGrowth1Token",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "activeIncentive()": "facb0eb1",
              "globalState()": "e76c01e4",
              "liquidity()": "1a686502",
              "liquidityCooldown()": "17e25b3c",
              "positions(bytes32)": "514ea4bf",
              "tickTable(int16)": "c677e3e0",
              "ticks(int24)": "f30dba93",
              "timepoints(uint256)": "74eceae6",
              "totalFeeGrowth0Token()": "6378ae44",
              "totalFeeGrowth1Token()": "ecdecf42"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/core/IAlgebraPool.sol": {
        "ast": {
          "absolutePath": "contracts/core/IAlgebraPool.sol",
          "exportedSymbols": {
            "IAlgebraPool": [
              21
            ],
            "IAlgebraPoolActions": [
              309
            ],
            "IAlgebraPoolDerivedState": [
              346
            ],
            "IAlgebraPoolEvents": [
              458
            ],
            "IAlgebraPoolImmutables": [
              499
            ],
            "IAlgebraPoolPermissionedActions": [
              523
            ],
            "IAlgebraPoolState": [
              643
            ],
            "IDataStorageOperator": [
              195
            ]
          },
          "id": 22,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:0"
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolImmutables.sol",
              "file": "./pool/IAlgebraPoolImmutables.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 22,
              "sourceUnit": 500,
              "src": "74:43:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolState.sol",
              "file": "./pool/IAlgebraPoolState.sol",
              "id": 3,
              "nodeType": "ImportDirective",
              "scope": 22,
              "sourceUnit": 644,
              "src": "119:38:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolDerivedState.sol",
              "file": "./pool/IAlgebraPoolDerivedState.sol",
              "id": 4,
              "nodeType": "ImportDirective",
              "scope": 22,
              "sourceUnit": 347,
              "src": "159:45:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolActions.sol",
              "file": "./pool/IAlgebraPoolActions.sol",
              "id": 5,
              "nodeType": "ImportDirective",
              "scope": 22,
              "sourceUnit": 310,
              "src": "206:40:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolPermissionedActions.sol",
              "file": "./pool/IAlgebraPoolPermissionedActions.sol",
              "id": 6,
              "nodeType": "ImportDirective",
              "scope": 22,
              "sourceUnit": 524,
              "src": "248:52:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolEvents.sol",
              "file": "./pool/IAlgebraPoolEvents.sol",
              "id": 7,
              "nodeType": "ImportDirective",
              "scope": 22,
              "sourceUnit": 459,
              "src": "302:39:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "IAlgebraPoolImmutables",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 499,
                    "src": "624:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolImmutables_$499",
                      "typeString": "contract IAlgebraPoolImmutables"
                    }
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "624:22:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAlgebraPoolState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 643,
                    "src": "651:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolState_$643",
                      "typeString": "contract IAlgebraPoolState"
                    }
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "651:17:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "IAlgebraPoolDerivedState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 346,
                    "src": "673:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolDerivedState_$346",
                      "typeString": "contract IAlgebraPoolDerivedState"
                    }
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "673:24:0"
                },
                {
                  "baseName": {
                    "id": 15,
                    "name": "IAlgebraPoolActions",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 309,
                    "src": "702:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolActions_$309",
                      "typeString": "contract IAlgebraPoolActions"
                    }
                  },
                  "id": 16,
                  "nodeType": "InheritanceSpecifier",
                  "src": "702:19:0"
                },
                {
                  "baseName": {
                    "id": 17,
                    "name": "IAlgebraPoolPermissionedActions",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 523,
                    "src": "726:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolPermissionedActions_$523",
                      "typeString": "contract IAlgebraPoolPermissionedActions"
                    }
                  },
                  "id": 18,
                  "nodeType": "InheritanceSpecifier",
                  "src": "726:31:0"
                },
                {
                  "baseName": {
                    "id": 19,
                    "name": "IAlgebraPoolEvents",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 458,
                    "src": "762:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolEvents_$458",
                      "typeString": "contract IAlgebraPoolEvents"
                    }
                  },
                  "id": 20,
                  "nodeType": "InheritanceSpecifier",
                  "src": "762:18:0"
                }
              ],
              "contractDependencies": [
                309,
                346,
                458,
                499,
                523,
                643
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "345:248:0",
                "text": " @title The interface for a Algebra Pool\n @dev The pool interface is broken up into many smaller pieces.\n Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 21,
              "linearizedBaseContracts": [
                21,
                458,
                523,
                309,
                346,
                643,
                499
              ],
              "name": "IAlgebraPool",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 22,
              "src": "595:232:0"
            }
          ],
          "src": "46:783:0"
        },
        "id": 0
      },
      "contracts/core/IDataStorageOperator.sol": {
        "ast": {
          "absolutePath": "contracts/core/IDataStorageOperator.sol",
          "exportedSymbols": {
            "IDataStorageOperator": [
              195
            ]
          },
          "id": 196,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 23,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:1"
            },
            {
              "id": 24,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "72:19:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 195,
              "linearizedBaseContracts": [
                195
              ],
              "name": "IDataStorageOperator",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IDataStorageOperator.FeeConfig",
                  "id": 43,
                  "members": [
                    {
                      "constant": false,
                      "id": 26,
                      "mutability": "mutable",
                      "name": "alpha1",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "215:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 25,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "215:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 28,
                      "mutability": "mutable",
                      "name": "alpha2",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "269:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "269:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30,
                      "mutability": "mutable",
                      "name": "beta1",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "324:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 29,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "324:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 32,
                      "mutability": "mutable",
                      "name": "beta2",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "391:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "391:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 34,
                      "mutability": "mutable",
                      "name": "gamma1",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "459:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 33,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "459:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "gamma2",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "530:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 35,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "530:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "volumeBeta",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "602:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "602:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 40,
                      "mutability": "mutable",
                      "name": "volumeGamma",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "681:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "681:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42,
                      "mutability": "mutable",
                      "name": "baseFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "760:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 41,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "760:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FeeConfig",
                  "nodeType": "StructDefinition",
                  "scope": 195,
                  "src": "191:613:1",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 47,
                  "name": "FeeConfiguration",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeConfig",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "833:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeConfig_$43_memory_ptr",
                          "typeString": "struct IDataStorageOperator.FeeConfig"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "FeeConfig",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 43,
                          "src": "833:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeConfig_$43_storage_ptr",
                            "typeString": "struct IDataStorageOperator.FeeConfig"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "832:21:1"
                  },
                  "src": "810:44:1"
                },
                {
                  "documentation": {
                    "id": 48,
                    "nodeType": "StructuredDocumentation",
                    "src": "860:928:1",
                    "text": " @notice Returns data belonging to a certain timepoint\n @param index The index of timepoint in the array\n @dev There is more convenient function to fetch a timepoint: observe(). Which requires not an index but seconds\n @return initialized Whether the timepoint has been initialized and the values are safe to use,\n blockTimestamp The timestamp of the observation,\n tickCumulative The tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp,\n secondsPerLiquidityCumulative The seconds per in range liquidity for the life of the pool as of the timepoint timestamp,\n volatilityCumulative Cumulative standard deviation for the life of the pool as of the timepoint timestamp,\n averageTick Time-weighted average tick,\n volumePerLiquidityCumulative Cumulative swap volume per liquidity for the life of the pool as of the timepoint timestamp"
                  },
                  "functionSelector": "74eceae6",
                  "id": 67,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "timepoints",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1812:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1812:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1811:15:1"
                  },
                  "returnParameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1873:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1873:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1898:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1898:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "tickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1928:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "1928:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1957:37:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1957:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "volatilityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2003:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "uint88",
                          "nodeType": "ElementaryTypeName",
                          "src": "2003:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint88",
                            "typeString": "uint88"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "averageTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2039:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2039:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "volumePerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2065:36:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "2065:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1864:244:1"
                  },
                  "scope": 195,
                  "src": "1792:317:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "2115:260:1",
                    "text": "@notice Initialize the dataStorage array by writing the first slot. Called once for the lifecycle of the timepoints array\n @param time The time of the dataStorage initialization, via block.timestamp truncated to uint32\n @param tick Initial tick"
                  },
                  "functionSelector": "475fb80c",
                  "id": 75,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "2399:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2399:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "2412:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2412:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2398:25:1"
                  },
                  "returnParameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2432:0:1"
                  },
                  "scope": 195,
                  "src": "2379:54:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 76,
                    "nodeType": "StructuredDocumentation",
                    "src": "2439:1211:1",
                    "text": "@dev Reverts if an timepoint at or before the desired timepoint timestamp does not exist.\n 0 may be passed as `secondsAgo' to return the current cumulative values.\n If called with a timestamp falling between two timepoints, returns the counterfactual accumulator values\n at exactly the timestamp between the two timepoints.\n @param time The current block timestamp\n @param secondsAgo The amount of time to look back, in seconds, at which point to return an timepoint\n @param tick The current tick\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param liquidity The current in-range pool liquidity\n @return tickCumulative The cumulative tick since the pool was first initialized, as of `secondsAgo`\n @return secondsPerLiquidityCumulative The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`\n @return volatilityCumulative The cumulative volatility value since the pool was first initialized, as of `secondsAgo`\n @return volumePerAvgLiquidity The cumulative volume per liquidity value since the pool was first initialized, as of `secondsAgo`"
                  },
                  "functionSelector": "14c54079",
                  "id": 97,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSingleTimepoint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 78,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3688:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3688:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "secondsAgo",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3706:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3706:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 82,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3730:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3730:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3747:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "3747:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3766:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3766:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3681:107:1"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "tickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3835:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "3835:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3864:37:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "3864:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "volatilityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3910:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "3910:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "volumePerAvgLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "3947:29:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3947:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3826:157:1"
                  },
                  "scope": 195,
                  "src": "3654:330:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 98,
                    "nodeType": "StructuredDocumentation",
                    "src": "3990:1070:1",
                    "text": "@notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\n @dev Reverts if `secondsAgos` > oldest timepoint\n @param time The current block.timestamp\n @param secondsAgos Each amount of time to look back, in seconds, at which point to return an timepoint\n @param tick The current tick\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param liquidity The current in-range pool liquidity\n @return tickCumulatives The cumulative tick since the pool was first initialized, as of each `secondsAgo`\n @return secondsPerLiquidityCumulatives The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`\n @return volatilityCumulatives The cumulative volatility values since the pool was first initialized, as of each `secondsAgo`\n @return volumePerAvgLiquiditys The cumulative volume per liquidity values since the pool was first initialized, as of each `secondsAgo`"
                  },
                  "functionSelector": "fd31e988",
                  "id": 124,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimepoints",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 100,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5093:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5093:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 103,
                        "mutability": "mutable",
                        "name": "secondsAgos",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5111:27:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 101,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5111:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 102,
                          "nodeType": "ArrayTypeName",
                          "src": "5111:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 105,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5145:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "5145:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5162:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5162:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5181:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5181:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5086:117:1"
                  },
                  "returnParameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "tickCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5250:30:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 111,
                            "name": "int56",
                            "nodeType": "ElementaryTypeName",
                            "src": "5250:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            }
                          },
                          "id": 112,
                          "nodeType": "ArrayTypeName",
                          "src": "5250:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                            "typeString": "int56[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5289:47:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                          "typeString": "uint160[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 114,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "5289:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "id": 115,
                          "nodeType": "ArrayTypeName",
                          "src": "5289:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
                            "typeString": "uint160[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "volatilityCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5345:38:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint112_$dyn_memory_ptr",
                          "typeString": "uint112[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 117,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "5345:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "id": 118,
                          "nodeType": "ArrayTypeName",
                          "src": "5345:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint112_$dyn_storage_ptr",
                            "typeString": "uint112[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "volumePerAvgLiquiditys",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "5392:39:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 120,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5392:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 121,
                          "nodeType": "ArrayTypeName",
                          "src": "5392:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5241:197:1"
                  },
                  "scope": 195,
                  "src": "5064:375:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 125,
                    "nodeType": "StructuredDocumentation",
                    "src": "5445:489:1",
                    "text": "@notice Returns average volatility in the range from time-WINDOW to time\n @param time The current block.timestamp\n @param tick The current tick\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param liquidity The current in-range pool liquidity\n @return TWVolatilityAverage The average volatility in the recent range\n @return TWVolumePerLiqAverage The average volume per liquidity in the recent range"
                  },
                  "functionSelector": "bc2e0181",
                  "id": 140,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAverages",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "5965:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5965:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "5983:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "5983:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "6000:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "6000:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "6019:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6019:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5958:83:1"
                  },
                  "returnParameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "TWVolatilityAverage",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "6065:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "6065:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 138,
                        "mutability": "mutable",
                        "name": "TWVolumePerLiqAverage",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "6094:29:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6094:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6064:60:1"
                  },
                  "scope": 195,
                  "src": "5938:187:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 141,
                    "nodeType": "StructuredDocumentation",
                    "src": "6131:706:1",
                    "text": "@notice Writes an dataStorage timepoint to the array\n @dev Writable at most once per block. Index represents the most recently written element. index must be tracked externally.\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param blockTimestamp The timestamp of the new timepoint\n @param tick The active tick at the time of the new timepoint\n @param liquidity The total in-range liquidity at the time of the new timepoint\n @param volumePerLiquidity The gmean(volumes)/liquidity at the time of the new timepoint\n @return indexUpdated The new index of the most recently written element in the dataStorage array"
                  },
                  "functionSelector": "1dd486f2",
                  "id": 156,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "write",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 143,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "6862:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "6862:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 145,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "6881:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 144,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6881:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "6909:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "6909:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "6926:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6926:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 151,
                        "mutability": "mutable",
                        "name": "volumePerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "6950:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6950:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6855:126:1"
                  },
                  "returnParameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "indexUpdated",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "7000:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "7000:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6999:21:1"
                  },
                  "scope": 195,
                  "src": "6841:180:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 157,
                    "nodeType": "StructuredDocumentation",
                    "src": "7027:50:1",
                    "text": "@notice Changes fee configuration for the pool"
                  },
                  "functionSelector": "1c7004cb",
                  "id": 162,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeFeeConfiguration",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "feeConfig",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "7113:28:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeConfig_$43_calldata_ptr",
                          "typeString": "struct IDataStorageOperator.FeeConfig"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "FeeConfig",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 43,
                          "src": "7113:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeConfig_$43_storage_ptr",
                            "typeString": "struct IDataStorageOperator.FeeConfig"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7112:30:1"
                  },
                  "returnParameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7151:0:1"
                  },
                  "scope": 195,
                  "src": "7081:71:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "7158:303:1",
                    "text": "@notice Calculates gmean(volume/liquidity) for block\n @param liquidity The current in-range pool liquidity\n @param amount0 Total amount of swapped token0\n @param amount1 Total amount of swapped token1\n @return volumePerLiquidity gmean(volume/liquidity) capped by 100000 << 64"
                  },
                  "functionSelector": "36e52fee",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateVolumePerLiquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "7508:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7508:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "7532:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7532:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "7553:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7553:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7501:71:1"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "volumePerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "7596:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7596:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7595:28:1"
                  },
                  "scope": 195,
                  "src": "7465:159:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "7630:68:1",
                    "text": "@return windowLength Length of window used to calculate averages"
                  },
                  "functionSelector": "461645bf",
                  "id": 180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "window",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7717:2:1"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "windowLength",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "7743:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7743:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7742:21:1"
                  },
                  "scope": 195,
                  "src": "7702:62:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 181,
                    "nodeType": "StructuredDocumentation",
                    "src": "7770:365:1",
                    "text": "@notice Calculates fee based on combination of sigmoids\n @param time The current block.timestamp\n @param tick The current tick\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param liquidity The current in-range pool liquidity\n @return fee The fee in hundredths of a bip, i.e. 1e-6"
                  },
                  "functionSelector": "c53a182f",
                  "id": 194,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "8161:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8161:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "8179:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "8179:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "8196:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "8196:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "8215:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "8215:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8154:83:1"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "8261:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "8261:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8260:12:1"
                  },
                  "scope": 195,
                  "src": "8139:134:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 196,
              "src": "95:8181:1"
            }
          ],
          "src": "46:8232:1"
        },
        "id": 1
      },
      "contracts/core/pool/IAlgebraPoolActions.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolActions.sol",
          "exportedSymbols": {
            "IAlgebraPoolActions": [
              309
            ]
          },
          "id": 310,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 197,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 198,
                "nodeType": "StructuredDocumentation",
                "src": "74:176:2",
                "text": "@title Permissionless pool actions\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 309,
              "linearizedBaseContracts": [
                309
              ],
              "name": "IAlgebraPoolActions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 199,
                    "nodeType": "StructuredDocumentation",
                    "src": "285:208:2",
                    "text": " @notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param price the initial sqrt price of the pool as a Q64.96"
                  },
                  "functionSelector": "f637731d",
                  "id": 204,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "517:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "516:15:2"
                  },
                  "returnParameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "540:0:2"
                  },
                  "scope": 309,
                  "src": "497:44:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 205,
                    "nodeType": "StructuredDocumentation",
                    "src": "547:1176:2",
                    "text": " @notice Adds liquidity for the given recipient/bottomTick/topTick position\n @dev The caller of this method receives a callback in the form of IAlgebraMintCallback# AlgebraMintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on bottomTick, topTick, the amount of liquidity, and the current price.\n @param sender The address which will receive potential surplus of paid tokens\n @param recipient The address for which the liquidity will be created\n @param bottomTick The lower tick of the position in which to add liquidity\n @param topTick The upper tick of the position in which to add liquidity\n @param amount The desired amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return liquidityActual The actual minted amount of liquidity"
                  },
                  "functionSelector": "aafe29c0",
                  "id": 226,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1747:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1747:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1768:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1768:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1792:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1792:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1815:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1815:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1835:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1835:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1856:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1856:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1740:140:2"
                  },
                  "returnParameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1917:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1917:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1941:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1941:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "liquidityActual",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1965:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1965:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1908:87:2"
                  },
                  "scope": 309,
                  "src": "1727:269:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "2002:1043:2",
                    "text": " @notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param bottomTick The lower tick of the position for which to collect fees\n @param topTick The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
                  },
                  "functionSelector": "4f1eb3d8",
                  "id": 244,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collect",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "3072:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3072:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "3096:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3096:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "3119:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3119:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "amount0Requested",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "3139:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3139:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 237,
                        "mutability": "mutable",
                        "name": "amount1Requested",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "3170:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3170:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3065:134:2"
                  },
                  "returnParameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "3218:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3218:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "3235:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3235:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3217:34:2"
                  },
                  "scope": 309,
                  "src": "3049:203:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 245,
                    "nodeType": "StructuredDocumentation",
                    "src": "3258:629:2",
                    "text": " @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param bottomTick The lower tick of the position for which to burn liquidity\n @param topTick The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
                  },
                  "functionSelector": "a34123a7",
                  "id": 258,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "3911:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "3934:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3934:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "3954:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3954:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3904:69:2"
                  },
                  "returnParameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "3992:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3992:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "4009:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4009:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3991:34:2"
                  },
                  "scope": 309,
                  "src": "3891:135:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 259,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:1076:2",
                    "text": " @notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IAlgebraSwapCallback# AlgebraSwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback. If using the Router it should contain\n SwapRouter#SwapCallbackData\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
                  },
                  "functionSelector": "128acb08",
                  "id": 276,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "5132:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5132:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "zeroToOne",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "5156:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5156:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "amountSpecified",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "5177:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5177:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "limitSqrtPrice",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "5206:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "5206:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "5235:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5235:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5125:134:2"
                  },
                  "returnParameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "5278:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5278:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "5294:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5294:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5277:32:2"
                  },
                  "scope": 309,
                  "src": "5112:198:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "5316:1189:2",
                    "text": " @notice Swap token0 for token1, or token1 for token0 (tokens that have fee on transfer)\n @dev The caller of this method receives a callback in the form of I AlgebraSwapCallback# AlgebraSwapCallback\n @param sender The address called this function (Comes from the Router)\n @param recipient The address to receive the output of the swap\n @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback. If using the Router it should contain\n SwapRouter#SwapCallbackData\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
                  },
                  "functionSelector": "71334694",
                  "id": 296,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapSupportingFeeOnInputTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "6555:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6555:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "6576:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6576:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "zeroToOne",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "6600:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6600:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "amountSpecified",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "6621:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6621:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "limitSqrtPrice",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "6650:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "6650:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "6679:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6679:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6548:155:2"
                  },
                  "returnParameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "6722:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6722:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "6738:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6738:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6721:32:2"
                  },
                  "scope": 309,
                  "src": "6509:245:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "6760:765:2",
                    "text": " @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IAlgebraFlashCallback# AlgebraFlashCallback\n @dev All excess tokens paid in the callback are distributed to liquidity providers as an additional fee. So this method can be used\n to donate underlying tokens to currently in-range liquidity providers by calling with 0 amount{0,1} and sending\n the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
                  },
                  "functionSelector": "490e6cbc",
                  "id": 308,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "flash",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
                        "src": "7550:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7550:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
                        "src": "7574:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7574:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
                        "src": "7596:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7596:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
                        "src": "7618:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7618:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7543:99:2"
                  },
                  "returnParameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7651:0:2"
                  },
                  "scope": 309,
                  "src": "7529:123:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 310,
              "src": "250:7405:2"
            }
          ],
          "src": "46:7611:2"
        },
        "id": 2
      },
      "contracts/core/pool/IAlgebraPoolDerivedState.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolDerivedState.sol",
          "exportedSymbols": {
            "IAlgebraPoolDerivedState": [
              346
            ]
          },
          "id": 347,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 311,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 312,
                "nodeType": "StructuredDocumentation",
                "src": "74:364:3",
                "text": " @title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs.\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 346,
              "linearizedBaseContracts": [
                346
              ],
              "name": "IAlgebraPoolDerivedState",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 313,
                    "nodeType": "StructuredDocumentation",
                    "src": "480:1226:3",
                    "text": " @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulatives Cumulative seconds per liquidity-in-range value as of each `secondsAgos`\n from the current block timestamp\n @return volatilityCumulatives Cumulative standard deviation as of each `secondsAgos`\n @return volumePerAvgLiquiditys Cumulative swap volume per liquidity as of each `secondsAgos`"
                  },
                  "functionSelector": "9d3a5241",
                  "id": 331,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimepoints",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "secondsAgos",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "1733:29:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 314,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1733:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 315,
                          "nodeType": "ArrayTypeName",
                          "src": "1733:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1732:31:3"
                  },
                  "returnParameters": {
                    "id": 330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "tickCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "1810:30:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 318,
                            "name": "int56",
                            "nodeType": "ElementaryTypeName",
                            "src": "1810:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            }
                          },
                          "id": 319,
                          "nodeType": "ArrayTypeName",
                          "src": "1810:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                            "typeString": "int56[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "1849:47:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                          "typeString": "uint160[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 321,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1849:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "id": 322,
                          "nodeType": "ArrayTypeName",
                          "src": "1849:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
                            "typeString": "uint160[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "volatilityCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "1905:38:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint112_$dyn_memory_ptr",
                          "typeString": "uint112[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 324,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "1905:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "id": 325,
                          "nodeType": "ArrayTypeName",
                          "src": "1905:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint112_$dyn_storage_ptr",
                            "typeString": "uint112[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 329,
                        "mutability": "mutable",
                        "name": "volumePerAvgLiquiditys",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "1952:39:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 327,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1952:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 328,
                          "nodeType": "ArrayTypeName",
                          "src": "1952:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1801:197:3"
                  },
                  "scope": 346,
                  "src": "1710:289:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 332,
                    "nodeType": "StructuredDocumentation",
                    "src": "2005:797:3",
                    "text": " @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param bottomTick The lower tick of the range\n @param topTick The upper tick of the range\n @return innerTickCumulative The snapshot of the tick accumulator for the range\n @return innerSecondsSpentPerLiquidity The snapshot of seconds per liquidity for the range\n @return innerSecondsSpent The snapshot of the number of seconds during which the price was in this range"
                  },
                  "functionSelector": "920c34e5",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInnerCumulatives",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "2835:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2835:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "2853:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2853:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2834:33:3"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "innerTickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "2914:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "2914:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "innerSecondsSpentPerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "2948:37:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "2948:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "innerSecondsSpent",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "2994:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2994:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2905:120:3"
                  },
                  "scope": 346,
                  "src": "2806:220:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 347,
              "src": "440:2589:3"
            }
          ],
          "src": "46:2985:3"
        },
        "id": 3
      },
      "contracts/core/pool/IAlgebraPoolEvents.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolEvents.sol",
          "exportedSymbols": {
            "IAlgebraPoolEvents": [
              458
            ]
          },
          "id": 459,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 348,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 349,
                "nodeType": "StructuredDocumentation",
                "src": "74:173:4",
                "text": "@title Events emitted by a pool\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": true,
              "id": 458,
              "linearizedBaseContracts": [
                458
              ],
              "name": "IAlgebraPoolEvents",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 350,
                    "nodeType": "StructuredDocumentation",
                    "src": "281:344:4",
                    "text": " @notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param price The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
                  },
                  "id": 356,
                  "name": "Initialize",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "646:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "661:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "661:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "645:27:4"
                  },
                  "src": "629:44:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 357,
                    "nodeType": "StructuredDocumentation",
                    "src": "679:558:4",
                    "text": " @notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param liquidityAmount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
                  },
                  "id": 373,
                  "name": "Mint",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 359,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "1258:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1258:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 361,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "1279:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1279:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 363,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "1307:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 362,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1307:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 365,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "1338:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 364,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1338:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 367,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidityAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "1366:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1366:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 369,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "1396:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1396:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "1418:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1418:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1251:187:4"
                  },
                  "src": "1241:198:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 374,
                    "nodeType": "StructuredDocumentation",
                    "src": "1445:547:4",
                    "text": " @notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param recipient The address that received fees\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
                  },
                  "id": 388,
                  "name": "Collect",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "2010:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2010:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 378,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "2033:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2033:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 380,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "2052:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2052:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 382,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "2078:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2078:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "2101:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2101:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "2118:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2118:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2009:125:4"
                  },
                  "src": "1996:139:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 389,
                    "nodeType": "StructuredDocumentation",
                    "src": "2141:530:4",
                    "text": " @notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param liquidityAmount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
                  },
                  "id": 403,
                  "name": "Burn",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 391,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "2686:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2686:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 393,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "2709:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2709:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 395,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "2735:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2735:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidityAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "2758:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2758:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 399,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "2783:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2783:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 401,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "2800:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2800:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2685:131:4"
                  },
                  "src": "2675:142:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 404,
                    "nodeType": "StructuredDocumentation",
                    "src": "2823:592:4",
                    "text": " @notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param price The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
                  },
                  "id": 420,
                  "name": "Swap",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "3430:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3430:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 408,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "3454:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3454:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 410,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "3481:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3481:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 412,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "3497:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3497:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "3513:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "3513:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 416,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "3528:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3528:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 418,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "3547:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 417,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3547:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3429:129:4"
                  },
                  "src": "3419:140:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 421,
                    "nodeType": "StructuredDocumentation",
                    "src": "3565:563:4",
                    "text": " @notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
                  },
                  "id": 435,
                  "name": "Flash",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 434,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 423,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "4144:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4144:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "4168:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4168:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 427,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "4195:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4195:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 429,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "4212:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4212:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paid0",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "4229:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4229:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 433,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paid1",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "4244:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4244:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4143:115:4"
                  },
                  "src": "4132:127:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 436,
                    "nodeType": "StructuredDocumentation",
                    "src": "4265:246:4",
                    "text": " @notice Emitted when the community fee is changed by the pool\n @param communityFee0New The updated value of the token0 community fee percent\n @param communityFee1New The updated value of the token1 community fee percent"
                  },
                  "id": 442,
                  "name": "CommunityFee",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 438,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "communityFee0New",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "4534:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4534:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 440,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "communityFee1New",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "4558:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4558:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4533:48:4"
                  },
                  "src": "4515:67:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 443,
                    "nodeType": "StructuredDocumentation",
                    "src": "4588:171:4",
                    "text": " @notice Emitted when new activeIncentive is set\n @param virtualPoolAddress The address of a virtual pool associated with the current active incentive"
                  },
                  "id": 447,
                  "name": "Incentive",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 445,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "virtualPoolAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 447,
                        "src": "4779:34:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:36:4"
                  },
                  "src": "4763:52:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 448,
                    "nodeType": "StructuredDocumentation",
                    "src": "4821:97:4",
                    "text": " @notice Emitted when the fee changes\n @param fee The value of the token fee"
                  },
                  "id": 452,
                  "name": "Fee",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 450,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "4932:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4932:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4931:12:4"
                  },
                  "src": "4922:22:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 453,
                    "nodeType": "StructuredDocumentation",
                    "src": "4950:140:4",
                    "text": " @notice Emitted when the LiquidityCooldown changes\n @param liquidityCooldown The value of locktime for added liquidity"
                  },
                  "id": 457,
                  "name": "LiquidityCooldown",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 455,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidityCooldown",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "5118:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5118:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5117:26:4"
                  },
                  "src": "5094:50:4"
                }
              ],
              "scope": 459,
              "src": "247:4900:4"
            }
          ],
          "src": "46:5103:4"
        },
        "id": 4
      },
      "contracts/core/pool/IAlgebraPoolImmutables.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolImmutables.sol",
          "exportedSymbols": {
            "IAlgebraPoolImmutables": [
              499
            ],
            "IDataStorageOperator": [
              195
            ]
          },
          "id": 500,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 460,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:5"
            },
            {
              "absolutePath": "contracts/core/IDataStorageOperator.sol",
              "file": "../IDataStorageOperator.sol",
              "id": 461,
              "nodeType": "ImportDirective",
              "scope": 500,
              "sourceUnit": 196,
              "src": "74:37:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 462,
                "nodeType": "StructuredDocumentation",
                "src": "115:178:5",
                "text": "@title Pool state that never changes\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 499,
              "linearizedBaseContracts": [
                499
              ],
              "name": "IAlgebraPoolImmutables",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 463,
                    "nodeType": "StructuredDocumentation",
                    "src": "331:137:5",
                    "text": " @notice The contract that stores all the timepoints and can perform actions with them\n @return The operator address"
                  },
                  "functionSelector": "29047dfa",
                  "id": 468,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "dataStorageOperator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "500:2:5"
                  },
                  "returnParameters": {
                    "id": 467,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 466,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "526:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "526:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "525:9:5"
                  },
                  "scope": 499,
                  "src": "472:63:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 469,
                    "nodeType": "StructuredDocumentation",
                    "src": "541:147:5",
                    "text": " @notice The contract that deployed the pool, which must adhere to the IAlgebraFactory interface\n @return The contract address"
                  },
                  "functionSelector": "c45a0155",
                  "id": 474,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "708:2:5"
                  },
                  "returnParameters": {
                    "id": 473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "734:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "734:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "733:9:5"
                  },
                  "scope": 499,
                  "src": "692:51:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 475,
                    "nodeType": "StructuredDocumentation",
                    "src": "749:124:5",
                    "text": " @notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
                  },
                  "functionSelector": "0dfe1681",
                  "id": 480,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 476,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "918:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "918:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "917:9:5"
                  },
                  "scope": 499,
                  "src": "877:50:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "933:125:5",
                    "text": " @notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
                  },
                  "functionSelector": "d21220a7",
                  "id": 486,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1077:2:5"
                  },
                  "returnParameters": {
                    "id": 485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 484,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "1103:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1103:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1102:9:5"
                  },
                  "scope": 499,
                  "src": "1062:50:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 487,
                    "nodeType": "StructuredDocumentation",
                    "src": "1118:337:5",
                    "text": " @notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value\n e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
                  },
                  "functionSelector": "d0c93a7c",
                  "id": 492,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tickSpacing",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 488,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1479:2:5"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 490,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 492,
                        "src": "1505:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1505:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1504:7:5"
                  },
                  "scope": 499,
                  "src": "1459:53:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 493,
                    "nodeType": "StructuredDocumentation",
                    "src": "1518:370:5",
                    "text": " @notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
                  },
                  "functionSelector": "70cf754a",
                  "id": 498,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxLiquidityPerTick",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1920:2:5"
                  },
                  "returnParameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1946:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1946:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1945:9:5"
                  },
                  "scope": 499,
                  "src": "1892:63:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 500,
              "src": "293:1665:5"
            }
          ],
          "src": "46:1914:5"
        },
        "id": 5
      },
      "contracts/core/pool/IAlgebraPoolPermissionedActions.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolPermissionedActions.sol",
          "exportedSymbols": {
            "IAlgebraPoolPermissionedActions": [
              523
            ]
          },
          "id": 524,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 501,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 502,
                "nodeType": "StructuredDocumentation",
                "src": "74:272:6",
                "text": " @title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner or tokenomics\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 523,
              "linearizedBaseContracts": [
                523
              ],
              "name": "IAlgebraPoolPermissionedActions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 503,
                    "nodeType": "StructuredDocumentation",
                    "src": "395:285:6",
                    "text": " @notice Set the community's % share of the fees. Cannot exceed 25% (250)\n @param communityFee0 new community fee percent for token0 of the pool in thousandths (1e-3)\n @param communityFee1 new community fee percent for token1 of the pool in thousandths (1e-3)"
                  },
                  "functionSelector": "7c0112b7",
                  "id": 510,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setCommunityFee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "communityFee0",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "709:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "communityFee1",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "730:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "730:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:42:6"
                  },
                  "returnParameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:0:6"
                  },
                  "scope": 523,
                  "src": "684:76:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 511,
                    "nodeType": "StructuredDocumentation",
                    "src": "766:141:6",
                    "text": " @notice Sets an active incentive\n @param virtualPoolAddress The address of a virtual pool associated with the incentive"
                  },
                  "functionSelector": "7c1fe0c8",
                  "id": 516,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setIncentive",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 513,
                        "mutability": "mutable",
                        "name": "virtualPoolAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "933:26:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "932:28:6"
                  },
                  "returnParameters": {
                    "id": 515,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "969:0:6"
                  },
                  "scope": 523,
                  "src": "911:59:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 517,
                    "nodeType": "StructuredDocumentation",
                    "src": "976:117:6",
                    "text": " @notice Sets new lock time for added liquidity\n @param newLiquidityCooldown The time in seconds"
                  },
                  "functionSelector": "289fe9b0",
                  "id": 522,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setLiquidityCooldown",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "newLiquidityCooldown",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "1127:27:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1127:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1126:29:6"
                  },
                  "returnParameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1164:0:6"
                  },
                  "scope": 523,
                  "src": "1097:68:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 524,
              "src": "348:820:6"
            }
          ],
          "src": "46:1124:6"
        },
        "id": 6
      },
      "contracts/core/pool/IAlgebraPoolState.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolState.sol",
          "exportedSymbols": {
            "IAlgebraPoolState": [
              643
            ]
          },
          "id": 644,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 525,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 526,
                "nodeType": "StructuredDocumentation",
                "src": "74:175:7",
                "text": "@title Pool state that can change\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 643,
              "linearizedBaseContracts": [
                643
              ],
              "name": "IAlgebraPoolState",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 527,
                    "nodeType": "StructuredDocumentation",
                    "src": "282:960:7",
                    "text": " @notice The globalState structure in the pool stores many values but requires only one slot\n and is exposed as a single method to save gas when accessed externally.\n @return price The current price of the pool as a sqrt(token1/token0) Q64.96 value;\n Returns tick The current tick of the pool, i.e. according to the last tick transition that was run;\n Returns This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick\n boundary;\n Returns fee The last pool fee value in hundredths of a bip, i.e. 1e-6;\n Returns timepointIndex The index of the last written timepoint;\n Returns communityFeeToken0 The community fee percentage of the swap fee in thousandths (1e-3) for token0;\n Returns communityFeeToken1 The community fee percentage of the swap fee in thousandths (1e-3) for token1;\n Returns unlocked Whether the pool is currently locked to reentrancy;"
                  },
                  "functionSelector": "e76c01e4",
                  "id": 544,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "globalState",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1266:2:7"
                  },
                  "returnParameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "1315:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1315:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "1337:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1337:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "1356:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1356:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "timepointIndex",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "1375:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1375:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "communityFeeToken0",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "1405:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1405:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 540,
                        "mutability": "mutable",
                        "name": "communityFeeToken1",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "1438:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1438:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 542,
                        "mutability": "mutable",
                        "name": "unlocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "1471:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1471:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1306:185:7"
                  },
                  "scope": 643,
                  "src": "1246:246:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 545,
                    "nodeType": "StructuredDocumentation",
                    "src": "1498:179:7",
                    "text": " @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
                  },
                  "functionSelector": "6378ae44",
                  "id": 550,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalFeeGrowth0Token",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1710:2:7"
                  },
                  "returnParameters": {
                    "id": 549,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 548,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 550,
                        "src": "1736:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 547,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1736:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1735:9:7"
                  },
                  "scope": 643,
                  "src": "1681:64:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 551,
                    "nodeType": "StructuredDocumentation",
                    "src": "1751:179:7",
                    "text": " @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
                  },
                  "functionSelector": "ecdecf42",
                  "id": 556,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalFeeGrowth1Token",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 552,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1963:2:7"
                  },
                  "returnParameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 554,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "1989:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1989:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1988:9:7"
                  },
                  "scope": 643,
                  "src": "1934:64:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 557,
                    "nodeType": "StructuredDocumentation",
                    "src": "2004:215:7",
                    "text": " @notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks.\n Returned value cannot exceed type(uint128).max"
                  },
                  "functionSelector": "1a686502",
                  "id": 562,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "liquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2241:2:7"
                  },
                  "returnParameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "2267:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2267:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2266:9:7"
                  },
                  "scope": 643,
                  "src": "2223:53:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "2282:1320:7",
                    "text": " @notice Look up information about a specific tick in the pool\n @dev This is a public structure, so the `return` natspec tags are omitted.\n @param tick The tick to look up\n @return liquidityTotal the total amount of position liquidity that uses the pool either as tick lower or\n tick upper\n @return liquidityDelta how much liquidity changes when the pool price crosses the tick;\n Returns outerFeeGrowth0Token the fee growth on the other side of the tick from the current tick in token0;\n Returns outerFeeGrowth1Token the fee growth on the other side of the tick from the current tick in token1;\n Returns outerTickCumulative the cumulative tick value on the other side of the tick from the current tick;\n Returns outerSecondsPerLiquidity the seconds spent per liquidity on the other side of the tick from the current tick;\n Returns outerSecondsSpent the seconds spent on the other side of the tick from the current tick;\n Returns initialized Set to true if the tick is initialized, i.e. liquidityTotal is greater than 0\n otherwise equal to false. Outside values can only be used if the tick is initialized.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
                  },
                  "functionSelector": "f30dba93",
                  "id": 584,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ticks",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 566,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3621:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3621:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3620:12:7"
                  },
                  "returnParameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 568,
                        "mutability": "mutable",
                        "name": "liquidityTotal",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3679:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3679:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 570,
                        "mutability": "mutable",
                        "name": "liquidityDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3710:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 569,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3710:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 572,
                        "mutability": "mutable",
                        "name": "outerFeeGrowth0Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3740:28:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3740:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 574,
                        "mutability": "mutable",
                        "name": "outerFeeGrowth1Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3777:28:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3777:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 576,
                        "mutability": "mutable",
                        "name": "outerTickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3814:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 575,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "3814:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "outerSecondsPerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3848:32:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "3848:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "outerSecondsSpent",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3889:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3889:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3922:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3922:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3670:275:7"
                  },
                  "scope": 643,
                  "src": "3606:340:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 585,
                    "nodeType": "StructuredDocumentation",
                    "src": "3952:101:7",
                    "text": "@notice Returns 256 packed tick initialized boolean values. See TickTable for more information "
                  },
                  "functionSelector": "c677e3e0",
                  "id": 592,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tickTable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "wordPosition",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "4076:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int16",
                          "typeString": "int16"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "int16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4076:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int16",
                            "typeString": "int16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4075:20:7"
                  },
                  "returnParameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "4119:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4118:9:7"
                  },
                  "scope": 643,
                  "src": "4057:71:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 593,
                    "nodeType": "StructuredDocumentation",
                    "src": "4134:857:7",
                    "text": " @notice Returns the information about a position by the position's key\n @dev This is a public mapping of structures, so the `return` natspec tags are omitted.\n @param key The position's key is a hash of a preimage composed by the owner, bottomTick and topTick\n @return liquidityAmount The amount of liquidity in the position;\n Returns lastLiquidityAddTimestamp Timestamp of last adding of liquidity;\n Returns innerFeeGrowth0Token Fee growth of token0 inside the tick range as of the last mint/burn/poke;\n Returns innerFeeGrowth1Token Fee growth of token1 inside the tick range as of the last mint/burn/poke;\n Returns fees0 The computed amount of token0 owed to the position as of the last mint/burn/poke;\n Returns fees1 The computed amount of token1 owed to the position as of the last mint/burn/poke"
                  },
                  "functionSelector": "514ea4bf",
                  "id": 610,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "positions",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "5014:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5014:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5013:13:7"
                  },
                  "returnParameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "liquidityAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "5073:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5073:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "lastLiquidityAddTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "5105:32:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5105:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "innerFeeGrowth0Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "5146:28:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5146:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 604,
                        "mutability": "mutable",
                        "name": "innerFeeGrowth1Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "5183:28:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 603,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5183:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "fees0",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "5220:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5220:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "fees1",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "5242:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5242:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5064:198:7"
                  },
                  "scope": 643,
                  "src": "4995:268:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 611,
                    "nodeType": "StructuredDocumentation",
                    "src": "5269:1136:7",
                    "text": " @notice Returns data about a specific timepoint index\n @param index The element of the timepoints array to fetch\n @dev You most likely want to use #getTimepoints() instead of this method to get an timepoint as of some amount of time\n ago, rather than at a specific index in the array.\n This is a public mapping of structures, so the `return` natspec tags are omitted.\n @return initialized whether the timepoint has been initialized and the values are safe to use;\n Returns blockTimestamp The timestamp of the timepoint;\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp;\n Returns secondsPerLiquidityCumulative the seconds per in range liquidity for the life of the pool as of the timepoint timestamp;\n Returns volatilityCumulative Cumulative standard deviation for the life of the pool as of the timepoint timestamp;\n Returns averageTick Time-weighted average tick;\n Returns volumePerLiquidityCumulative Cumulative swap volume per liquidity for the life of the pool as of the timepoint timestamp;"
                  },
                  "functionSelector": "74eceae6",
                  "id": 630,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "timepoints",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6429:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6429:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6428:15:7"
                  },
                  "returnParameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 616,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6490:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 615,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6490:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 618,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6515:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6515:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "tickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6545:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 619,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "6545:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6574:37:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "6574:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "volatilityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6620:27:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "uint88",
                          "nodeType": "ElementaryTypeName",
                          "src": "6620:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint88",
                            "typeString": "uint88"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "averageTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6656:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "6656:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 628,
                        "mutability": "mutable",
                        "name": "volumePerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6682:36:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 627,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "6682:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6481:244:7"
                  },
                  "scope": 643,
                  "src": "6409:317:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 631,
                    "nodeType": "StructuredDocumentation",
                    "src": "6732:290:7",
                    "text": " @notice Returns the information about active incentive\n @dev if there is no active incentive at the moment, virtualPool,endTimestamp,startTimestamp would be equal to 0\n @return virtualPool The address of a virtual pool associated with the current active incentive"
                  },
                  "functionSelector": "facb0eb1",
                  "id": 636,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "activeIncentive",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 632,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7050:2:7"
                  },
                  "returnParameters": {
                    "id": 635,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 634,
                        "mutability": "mutable",
                        "name": "virtualPool",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "7076:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7076:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7075:21:7"
                  },
                  "scope": 643,
                  "src": "7026:71:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 637,
                    "nodeType": "StructuredDocumentation",
                    "src": "7103:66:7",
                    "text": " @notice Returns the lock time for added liquidity"
                  },
                  "functionSelector": "17e25b3c",
                  "id": 642,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "liquidityCooldown",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 638,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7199:2:7"
                  },
                  "returnParameters": {
                    "id": 641,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "cooldownInSeconds",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "7225:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7225:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7224:26:7"
                  },
                  "scope": 643,
                  "src": "7173:78:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 644,
              "src": "249:7005:7"
            }
          ],
          "src": "46:7210:7"
        },
        "id": 7
      }
    }
  }
}
